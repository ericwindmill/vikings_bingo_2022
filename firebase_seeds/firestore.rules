rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

		function isAdmin() {
    	return request.auth.uid == 'VGNl9jE7loOhdpCzH1xxAOZYFm02';
    }
    function isCalm() {
    	return request.resource.data.bingoClaimTime
            > resource.data.bingoClaimTime + duration.value(15, 's');
    }
    function hasBingoClaimTime() {
      return 'bingoClaimTime' in request.resource.data;
    }
    function isBingoClaimTimeNow() {
      return request.resource.data['bingoClaimTime'] == request.time;
    }
    
    match /{document=**} {
    	allow read, write: if isAdmin();
    }
    match /Globals/Bootstrap {
    	allow read: if true;
    }
    match /Games/{gameid=*} {
      allow read;
    	match /Players/{playerid=*} {
      	allow read: if request.auth.uid == playerid;
        allow write: if request.auth.uid == playerid
        	 && (resource == null || request.resource.data.diff(resource.data).affectedKeys()
        	      .hasOnly(['name', 'status', 'bingoClaimTime']))
           && (!hasBingoClaimTime() || (
                isBingoClaimTimeNow() && isCalm()
              ))
          ;
      	match /Cards/{cardid} {
        	allow read: if request.auth.uid == playerid;
        }
      }
    }
  }
}